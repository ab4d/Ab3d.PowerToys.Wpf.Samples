<Page x:Class="Ab3d.PowerToys.Samples.Cameras.OffCenterCameraSample"
      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
      xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
      xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
      xmlns:cameras="clr-namespace:Ab3d.Cameras;assembly=Ab3d.PowerToys"
      xmlns:ab3d="clr-namespace:Ab3d.Controls;assembly=Ab3d.PowerToys"  
      xmlns:visuals="clr-namespace:Ab3d.Visuals;assembly=Ab3d.PowerToys"
      xmlns:common="clr-namespace:Ab3d.PowerToys.Samples.Common"
      mc:Ignorable="d" 
      Title="TemplatePage"
      d:DesignHeight="600" d:DesignWidth="800">

    <Grid Name="RootGrid">
        <Border Name="ViewportBorder" Background="Transparent">

            <Viewport3D Name="MainViewport">
                <visuals:WireGridVisual3D CenterPosition="0 -0.1 0" Size="100 100" WidthCellsCount="10" HeightCellsCount="10" LineColor="#555555" LineThickness="2"/>

                <visuals:BoxVisual3D CenterPosition="0 0 0" Size="15 6 15" Material="Gold" />

                <!--<visuals:ColoredAxisVisual3D Length="25" LineThickness="4" />-->
                <visuals:WireCrossVisual3D x:Name="TargetPositionCross" Position="30 0 0" LinesLength="28" LineThickness="3" LineColor="Blue" />
                <visuals:WireCrossVisual3D x:Name="RotationCenterPositionCross" Position="0 0 0" LinesLength="28" LineThickness="3" LineColor="Red" />

                <ModelVisual3D>
                    <ModelVisual3D.Content>
                        <Model3DGroup>
                            <AmbientLight Color="#333333"/>
                        </Model3DGroup>
                    </ModelVisual3D.Content>
                </ModelVisual3D>
            </Viewport3D>
        </Border>

        <!-- To move the rendered scene to the left, we set the TargetPosition to the right (in our case to 50 0 0) -
             This point will be shown at the center of the Viewport3D.
             But we still want to rotate around the center of coordinate axes so we set the RotationCenterPosition to (0, 0, 0) -->
        <cameras:TargetPositionCamera Name="Camera1" 
                                      Heading="30" Attitude="-20" Bank="0" 
                                      TargetPosition="30 0 0" RotationCenterPosition="0 0 0"
                                      Distance="150" 
                                      ShowCameraLight="Always"
                                      TargetViewport3D="{Binding ElementName=MainViewport}"/>

        <!-- IMPORTANT: RotateAroundMousePosition must be set to false, otherwise RotationCenterPosition will be overwritten by the mouse position -->
        <ab3d:MouseCameraController Name="MouseCameraController1"
                                    RotateCameraConditions="LeftMouseButtonPressed"
                                    MoveCameraConditions="LeftMouseButtonPressed, ControlKey"
                                    ShowRotationCenterMarker="True"
                                    RotateAroundMousePosition="False"
                                    ZoomMode="MousePosition"
                                    EventsSourceElement="{Binding ElementName=ViewportBorder}"
                                    TargetCamera="{Binding ElementName=Camera1}" />

        <Border Name="OptionsBorder" BorderBrush="Black" BorderThickness="1" VerticalAlignment="Bottom" HorizontalAlignment="Right" 
                Margin="10" Background="#CCFFFFFF" Width="320" Padding="10 15 10 10" UseLayoutRounding="True">

            <StackPanel Orientation="Vertical">
                <TextBlock Text="Off-center scene rendering" FontSize="18" FontWeight="Bold" Margin="0 0 0 10"/>
                
                <TextBlock Text="Current camera settings:" FontWeight="Bold"/>
                
                <common:SimpleGrid ColumnsCount="2" ColumnSpacing="5">
                    <TextBlock Text="TargetPosition:" Foreground="Blue" FontWeight="Bold" />
                    <TextBlock Name="TargetPositionValueTextBlock" />
                    <TextBlock Text="RotationCenterPosition:" Foreground="Red" FontWeight="Bold"/>
                    <TextBlock Name="RotationCenterPositionValueTextBlock" />
                </common:SimpleGrid>

                <TextBlock Text="Change scene center position:" FontWeight="Bold" Margin="0 15 0 0"/>
                <ToggleButton Name="LeftToggleButton" Content="Render scene on LEFT side" IsChecked="True" HorizontalAlignment="Left" HorizontalContentAlignment="Left" Padding="15 0 0 0" Width="210" Margin="0 5 0 0" Checked="OnRenderingCenterPositionChanged" />
                <ToggleButton Name="CenterToggleButton" Content="Default (CENTER) scene rendering" HorizontalAlignment="Left" HorizontalContentAlignment="Left" Padding="15 0 0 0" Width="210" Margin="0 2 0 0" Checked="OnRenderingCenterPositionChanged"/>
                <ToggleButton Name="RightToggleButton" Content="Render scene on RIGHT side" HorizontalAlignment="Left" HorizontalContentAlignment="Left" Padding="15 0 0 0" Width="210" Margin="0 2 0 0" Checked="OnRenderingCenterPositionChanged"/>

                <common:TextBlockEx TextWrapping="Wrap" Margin="0 20 0 0">
                    The 3D scene in a Viewport3D element is rendered in such a way that the Camera's TargetPosition is rendered in the center of the Viewport3D (this is the position the camera is looking at).\n
                    \n
                    This means, that if we want to move the center of the scene, we need to adjust the value of the TargetPosition property.
                    For example, to move the rendered scene to the left, we \bset the TargetPosition\b to a position right off the center position - in our case to (20, 0, 0). This will move our scene that is located around (0, 0, 0) to the left.\n
                    \n
                    But we still want to preserve the center or rotation - we want to rotate around the center of the coordinate axes.
                    To solve that we \bset the RotationCenterPosition\b to the desired position of rotation - (0, 0, 0).\n
                    \n
                    Notes:\n
                    \*MouseCameraController.RotateAroundMousePosition must be false.\n
                    \*RotationCenterPosition is supported only by TargetPositionCamera and FreeCamera.
                </common:TextBlockEx>
            </StackPanel>
        </Border>
    </Grid>
</Page>
