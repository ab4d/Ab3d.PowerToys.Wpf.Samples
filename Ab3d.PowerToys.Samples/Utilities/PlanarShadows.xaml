<Page x:Class="Ab3d.PowerToys.Samples.Utilities.PlanarShadows"
      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
      xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
      xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
      xmlns:cameras="clr-namespace:Ab3d.Cameras;assembly=Ab3d.PowerToys"
      xmlns:ab3d="clr-namespace:Ab3d.Controls;assembly=Ab3d.PowerToys"  
      xmlns:visuals="clr-namespace:Ab3d.Visuals;assembly=Ab3d.PowerToys"
      mc:Ignorable="d" 
      d:DesignHeight="450" d:DesignWidth="800"
      Title="PlanarShadows">

    <Grid>
        <Border Name="ViewportBorder">
            <Viewport3D Name="MainViewport">

                <visuals:PlaneVisual3D x:Name="GroundPlane" Size="400 400" Material="LightGreen" BackMaterial="Gray" />
                <ModelVisual3D x:Name="LightPlaceholder" />

            </Viewport3D>
        </Border>

        <cameras:TargetPositionCamera Name="Camera1" Heading="70" Attitude="-20" Bank="0" Distance="800" TargetPosition="15 10 0"
                                      ShowCameraLight="Always"
                                      TargetViewport3D="{Binding ElementName=MainViewport}"/>

        <!-- EventsSourceElement is set to ViewportBorder - this means that the ViewportBorder's mouse events are subscribed to - this enables camera rotation without the need to be over the rendered 3D element -->
        <ab3d:MouseCameraController Name="MouseCameraController1"
                                    RotateCameraConditions="LeftMouseButtonPressed"
                                    MoveCameraConditions="LeftMouseButtonPressed, ControlKey"
                                    ShowRotationCenterMarker="True"
                                    RotateAroundMousePosition="True"
                                    EventsSourceElement="{Binding ElementName=ViewportBorder}"
                                    TargetCamera="{Binding ElementName=Camera1}"/>

        <TextBlock FontWeight="Bold" FontSize="20" Foreground="#333" Margin="10" VerticalAlignment="Top" HorizontalAlignment="Left" 
                   Text="Planar shadows"/>

        <Border BorderBrush="Black" BorderThickness="2" Background="#88FFFFFF" VerticalAlignment="Bottom" HorizontalAlignment="Right" Margin="5">
            <StackPanel Orientation="Vertical" Margin="10">

                <TextBlock Text="Manual light control:" FontWeight="Bold" FontSize="13" Margin="0 0 0 0"/>
                <TextBlock Text="Arrow keys: Rotate light&#x0a;Page Up / Down: Light distance" FontSize="13"/>

                <TextBlock Text="Light type:" FontWeight="Bold" FontSize="13" Margin="0 10 0 0"/>
                <RadioButton Name="DirectionalLightRadioButton" Content="DirectionalLight" IsChecked="True" GroupName="LightTypeGroupName" Checked="DirectionalLightRadioButton_OnChecked" />
                <RadioButton Name="PointLightRadioButton" Content="PointLight" GroupName="LightTypeGroupName" Checked="PointLightRadioButton_OnChecked" />
                <RadioButton Name="SpotLightRadioButton" Content="SpotLight (not possible)" GroupName="LightTypeGroupName" IsEnabled="False" Foreground="DimGray" />

                <TextBlock Text="Settings:" FontWeight="Bold" FontSize="13" Margin="0 10 0 0"/>
                <CheckBox Name="ClipToPlaneCheckBox" Content="Clip shadow to plane" IsChecked="True" Margin="0 5 0 0" Checked="OnClipToPlaneCheckBoxCheckedChanged" Unchecked="OnClipToPlaneCheckBoxCheckedChanged" />
                <CheckBox Name="TransparentShadowCheckBox" Content="Transparent shadow" IsChecked="False" Margin="0 5 0 0" Checked="OnTransparentShadowCheckBoxCheckedChanged" Unchecked="OnTransparentShadowCheckBoxCheckedChanged" />
                <TextBlock Name="TransparentShadowInfoTextBlock" Foreground="Red" TextWrapping="Wrap" Width="180" FontSize="9.5" Visibility="Collapsed"
                           Text="Because overlapping triangles are rendered multiple times over some pixels, it is not possible to render transparent planer shadows correctly in WPF 3D. This is possible with Ab3d.DXEngine." />

                <Button Name="ChangeModelButton" Content="Change model" Margin="0 10 0 0" Click="ChangeModelButton_OnClick" />

            </StackPanel>
        </Border>

    </Grid>
</Page>
